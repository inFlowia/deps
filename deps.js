/* Возвращает путь к текущей директории.
ИСПОЛЬЗОВАНИЕ:
{
	const this_dir = get_this_dir_url(document.currentScript);
	...
	function function_where_this_need(){
	... this_dir + 'file_name.js'...}
}
можно так же использовать и прямо "на месте":
get_this_dir_url(document.currentScript) + 'script-name.js'
но ОСТОРОЖНО! Если получить путь так внутри функции, которая вызывается в других файлах то путь будет не к каталогу где задана функция а к каталогу, где она вызвана!
get_this_dir_url(document.currentScript) + 'script-name.js'

НАЗНАЧЕНИЕ: помогает формировать относительные ссылки в файлах, которые могут быть подключены в директориях, отличных от директории, в которой он находится (подробнее о проблеме см. в PHP в конструкции __DIR__.'/

ВОЗВРАЩАЕТ URL каталога скрипта вызвавшего функцию в виде http://site.ru/cat/
Обращаю внимание что последний / выводится. Почему так - см. в аналогичной моей ф-ции для PHP.

ВНИМАНИЕ:
	В качестве аргумента всегда должно передаваться свойство Document.currentScript, так как оно содержит путь к директории того файла в котором было получено.
	Внутри классов не сработает.

СОВМЕСТИМОСТЬ: Не работает на IE так как он не поддерживает Document.currentScript и в старых версиях остальных браузеров.

МОЖНО УЛУЧШИТЬ:
	В случае отсутствия Document.currentScript либо оповещать пользователя (но один раз! контроль при помощи статического флага) либо делать это тихо в консоль, либо на ненавязчивую информационную панель в виде: "Ваш браузер не поддерживается".

	В принципе можно ещё отрезать протокол и домен, но пока не наткнулся на места где это потребуется. Лишняя нагрузка на браузер не нужна. Если потребуется можно на базе этой функции без труда сделать обрезающую и назвать её get_this_dir.

функция не названа "from_this_dir" как мой аналог на PHP, так как она в отличие от аналога в основном используется для инициализации константы а не прямо при указании пути. Со совим текущим названием она выглядит логичнее для таких целей.
*/
function get_this_dir_url(doc_cur_script){
	if(doc_cur_script.src){ // браузер может не поддерживать document.currentScript
		let url = doc_cur_script.src
		return url.substring(0, url.lastIndexOf("/") + 1); // взять только начало строки без того что за последним /
	}
}
